---

name: Rest и Spread
theory: |


  Rest-оператор позволяет создавать функции с переменным числом параметров, сворачивая их в массив.

  ```typescript
  function max(...numbers: number[]) {
    return Math.max(...numbers);
  }
  ```

  Этот массив является обычным параметром функции, поэтому ему задается тип, в соответствии с тем, какие значения ожидаются внутри этого массива. Пример с двумя параметрами:

  ```typescript
  function do(operation: string, ...numbers: number[]) {
    // выполняем операцию operation для всех numbers
  }
  ```

  В этом смысле rest-оператор в TypeScript ничем не отличается от rest-оператора в JavaScript. А вот со spread-оператором есть одна особенность.

  Spread-оператор в функциях это как rest-оператор наоборот. Он позволяет раскладывать массив на отдельные параметры:

  ```typescript
  const numbers = [1, 2, 3];
  Math.max(...numbers);
  ```

  Если функция принимает на вход любое количество аргументов, как в примере выше, то такой код работает без проблем, но если функция принимает на вход определенное число аргументов, то TypeScript выдаст ошибку компиляции:

  ```typescript
  function sum(a: number, b: number) {
    return a + b;
  }

  // Выведенный тип number[] - "ноль или больше чисел"
  // а не "массив из двух чисел"
  const args = [1, 2];
  sum(...args);
  // A spread argument must either have a tuple type
  // or be passed to a rest parameter.
  ```

  Массивы в JavaScript изменяемы, поэтому TypeScript не может полагаться на количество элементов в конкретный момент времени, хотя, казалось бы, с точки зрения человека, в коде выше все очевидно.

  Есть разные способы обойти это ограничение, но в данном случае проще всего использовать Type Assertion. Это указание компилятору того, что мы точно знаем о коде.

  ```typescript
  const args = [1, 2] as const;
  ```

  Так мы явно указываем, что этот массив из двух конкретных значений, которые не поменяются. Подробнее о Type Assertion в модуле о типах.

instructions: |

  Определите функцию `max()`, которая отличается от примера из урока только тем, что у нее первый параметр обязательный.

# tips:
